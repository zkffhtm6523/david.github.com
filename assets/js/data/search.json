[ { "title": "Linux Curl", "url": "/posts/linux-curl/", "categories": "Linux, 명령어", "tags": "curl, linux, ubuntu", "date": "2021-07-12 23:10:29 +0900", "snippet": "리눅스 CURL : 웹 요청 명령어 CURL은 command line 기반의 웹 요청 도구 Unix, Linux, Windows 등의 주요 OS에서 구동 가능 HTTP / HTTPS / FTP / LDAP / SCP / TELNET / SMTP / POP3 등 핵심 프로코콜을 지원 download &amp;amp; upload 모두 가능 # curl 명령어curl [options] &amp;lt;url&amp;gt; short long 설명 ..." }, { "title": "Async", "url": "/posts/springboot-async/", "categories": "SpringBoot, Http", "tags": "Async, SpringBoot", "date": "2021-07-06 23:10:29 +0900", "snippet": "Java -&amp;gt; @Async 비동기 서비스// @EnableAsync로 비동기 기능 활성화// 비동기를 원하는 메소드는 public이어야 한다.@Configuration@Configuration@EnableAsyncpublic class AsyncConfig extends AsyncConfigurerSupport { public Executor getAsyncExecutor() { // ThreadPoolTaskExecutor로 비동기로 호출하는 Thread 대한 설정을 한다 T..." }, { "title": "WebClient", "url": "/posts/springboot-webclient/", "categories": "SpringBoot, Http", "tags": "JDK11, SpringBoot", "date": "2021-06-28 23:10:29 +0900", "snippet": "WebClient vs RestTemplate RestTemplate은 WebClient 보다 이전에 나왔다 RestTemplate은 동기식이며, response가 올 때까지 다음 행동으로 넘어갈 수 없다 RestTemplate은 곧 deprecated 될 예정 WebClientdependencies { compile &#39;org.springframework.boot:spring-boot-starter-webflux&#39; compile &#39;org.projectreact..." }, { "title": "Docker 명령어 정리", "url": "/posts/server-docker-2/", "categories": "Server, Docker", "tags": "Server, Docker", "date": "2021-06-22 23:10:29 +0900", "snippet": "Docker 명령어 정리# docker 이미지 목록docker images# docker 이미지 삭제docker rmi python:latest # 파이썬 최근 이미지 삭제# docker 프로세스 목록docker ps# docker container 삭제(기동중 or 중지 모두)# 삭제docker rm &quot;container ID&quot;# 강제 삭제docker rm -f &quot;container ID&quot;# docker container 시동(최근에 사용한 것이 없으면 dockerhub에서 가져옴)docker..." }, { "title": "CORS &amp; SOP", "url": "/posts/cs-network-cors/", "categories": "Computer-Science, Network", "tags": "CORS, SOP", "date": "2021-06-07 22:10:29 +0900", "snippet": "CORS란? CORS : Cross-Origin Resource Sharing(교차 출처 자원 공유)1. 출처(Origin)란? Javascript에서 console.log(location.origin) 입력하면 출처가 출력2. SOP란? SOP(Same-Origin Policy) : 동일 출처 정책3. CORS VS SOP https://taggle.kr https://taggle.kr/bookmark (O) https://taggle.kr:443/bookmarks?page=1 (O) http://taggle.kr (..." }, { "title": "Docker 개념", "url": "/posts/server-docker-1/", "categories": "Server, Docker", "tags": "Server, Docker", "date": "2021-06-02 22:10:29 +0900", "snippet": "Docker란? 리눅스 컨테이너를 기반으로 하여 특정한 서비스를 패키징하고 배포하는데 유용한 오픈소스 프로그램도커 사용 이유 일반적인 ‘호스팅 서비스’는 우리의 로컬 컴퓨터 환경과 상이하다. JVM 설치, 톰캣 설치 등 환경이 다를 수 밖에 없다. 컨테이너에 이미지(Image)를 담아서 구동시키는 방식으로 쉽게 배포VM(Virtual Machine) VS 컨테이너(Container) 컨테이너(Container)는 가상 머신 대신에 도커 엔진(Docker Engine) 위에서 동작한다는 특징 별도의 Guest OS가 사..." }, { "title": "Redis", "url": "/posts/cs-server-redis/", "categories": "Server, Redis", "tags": "Server, Redis", "date": "2021-06-02 22:10:29 +0900", "snippet": "Redis란? Pooling : 우리의 앱에서 엔드포인트에 이벤트가 발생했는지 주기적으로 요청을 보내는 방식이라 비효율적 WebHook : 엔드포인트에서 발생한 이벤트가 우리의 앱에 수신되는 형태 예) ATM기에서 현금을 2만원을 뽑았을때 SMS를 관리하는 시스템과 고객의 계좌를 관리하는 시스템 2개가 서로 긴밀하게 연결되어야 한다. 이때 웹훅을 사용한다. 고객 계좌 관리 시스템에서 현금이 인출되었다는 이벤트가 발생하여(웹훅 엔드포인트) SMS 시스템에서 그 이벤트를 수신하여 고객에게 ‘현금 2만원이 출금되었습니다’ 라는..." }, { "title": "웹훅(WebHook) vs 풀링(Pooling)", "url": "/posts/cs-network-webHook/", "categories": "Computer-Science, Network", "tags": "Network", "date": "2021-05-31 22:10:29 +0900", "snippet": "웹훅이란? Pooling : 우리의 앱에서 엔드포인트에 이벤트가 발생했는지 주기적으로 요청을 보내는 방식이라 비효율적 WebHook : 엔드포인트에서 발생한 이벤트가 우리의 앱에 수신되는 형태 예) ATM기에서 현금을 2만원을 뽑았을때 SMS를 관리하는 시스템과 고객의 계좌를 관리하는 시스템 2개가 서로 긴밀하게 연결되어야 한다. 이때 웹훅을 사용한다. 고객 계좌 관리 시스템에서 현금이 인출되었다는 이벤트가 발생하여(웹훅 엔드포인트) SMS 시스템에서 그 이벤트를 수신하여 고객에게 ‘현금 2만원이 출금되었습니다’ 라는 문..." }, { "title": "JDK8_Lambda", "url": "/posts/lang-jdk8-lambda/", "categories": "Programming, Java", "tags": "jdk8", "date": "2021-05-28 23:10:29 +0900", "snippet": " 람다 표현식은 한 번 이든 여러 번이든 나중에 실행할 수 있게 전달하는 코드 블록이다.람다 표현식 문법(String) first, String Second) -&amp;gt; { int difference = first.length() &amp;lt; second.length(); if(difference &amp;lt; 0) return -1; else if(difference &amp;gt; 0) return 1; else return 0;}" }, { "title": "JDK8_인터페이스", "url": "/posts/lang-jdk8-interface/", "categories": "Programming, Java", "tags": "jdk8", "date": "2021-05-28 23:10:29 +0900", "snippet": "1. Comparable 인터페이스 클래스가 자신이 갖고 있는 객체를 정렬할 수 있으려면, Comparable 인터페이스를 구현해야 한다.Comparable 인터페이스는 문자열 대 문자열, 직원 대 직원 등으로 비교해야한다.따라서 Comparable 인터페이스는 타입 파라미터를 받는다.public interface Comparable&amp;lt;T&amp;gt;{ int compareTo(T other);}예를 들어 String 클래스는 Comparable을 구현한다. 그러므로 String의 compareTo 메서드는..." }, { "title": "Git &amp; Github &amp; Gitlab Flow", "url": "/posts/dev-git-flow/", "categories": "Programming, GitHub", "tags": "GitHub", "date": "2021-05-27 23:10:29 +0900", "snippet": "Git &amp;amp; Github &amp;amp; Gitlab 참고 사이트 : https://ujuc.github.io/2015/12/16/git-flow-github-flow-gitlab-flow/ 형상관리를 하는 차원에서는 비슷하지만, Flow의 방식에는 차이가 있다. Git Flow feature &amp;gt; develop &amp;gt; release &amp;gt; hotfix &amp;gt; master 브런치가 존재 release 브런치와 hotfix 브런치의 경우, devel..." }, { "title": "[Python] Pass, Continue, Break", "url": "/posts/lang-python-pass/", "categories": "Programming, Python", "tags": "Python", "date": "2021-03-12 23:10:29 +0900", "snippet": "- pass, continue, break 차이점 pass : 실행할 코드가 없는 것으로 다음 행동을 계속해서 진행합니다. continue : 바로 다음 순번의 loop를 수행합니다. break : 반복문을 멈추고 loop 밖으로 나가도록합니다.1. pass 예시## 실행for i in range(10): if i % 2 == 0: pass print(i) else: print(i)print(&quot;Done&quot;)## 결과0123456789Done2. con..." }, { "title": "[Python] With문 이해하기", "url": "/posts/lang-python-with/", "categories": "Programming, Python", "tags": "Python", "date": "2021-02-22 23:10:29 +0900", "snippet": "- 개념 자원을 획득하고 사용 후 반납해야 하는 경우 주로 사용합니다. 1) 자원을 획득한다2) 자원을 사용한다3) 자원을 반납한다- 문법with EXPRESSION [as VARIABLE]: BLOCK- 예제class Hello: def __enter__(self): # 사용할 자원을 가져오거나 만든다(핸들러 등) print(&#39;enter...&#39;) return self # 반환값이 있어야 VARIABLE를 블록내에서 사용할 수 있다 def sayH..." }, { "title": "[Javascript] Routie", "url": "/posts/lang-js-routie/", "categories": "Programming, Javascript", "tags": "Javascript, Routie", "date": "2021-02-17 23:10:29 +0900", "snippet": "- Routie 공식 사이트- 일반 사용법routie(&#39;users&#39;, function() { //this gets called when hash == #users});- 응용 사용법routie({ &#39;users&#39;: function() { }, &#39;about&#39;: function() { }});// Routie 정의routie(&#39;users/:name&#39;, function(name) { //name == &#39;bob&#39;;});// Routi..." }, { "title": "GitHub Pages로 블로그 만들기", "url": "/posts/dev-blog-with-github-pages/", "categories": "Programming, GitHub", "tags": "GitHub", "date": "2021-02-14 18:48:00 +0900", "snippet": "1. 원하는 테마 찾기먼저 처음에 제가 원했던 테마는 포스트를 보기 쉽도록 카테고리가 있어야 했습니다.그 조건으로 여러가지 찾아보다가 jekyll-theme-chirpy 테마를 알게 되었고 써보기로 했습니다. 제가 생각한 이 테마의 장점은 다음과 같습니다. 카테고리의 존재 지속적인 업데이트 꽤나 이쁜 디자인!2. 블로그 생성 \\(\\color{#228B22}{\\textit{Download ZIP}}\\) 블로그를 생성하기 위해서, 먼저 소스를 다운로드(Clone) ..." }, { "title": "Gabia DNS 설정", "url": "/posts/cs-dns-gabia/", "categories": "Computer-Science, DNS", "tags": "Computer-Science, DNS", "date": "2021-01-22 23:10:29 +0900", "snippet": "- Gabia 사이트 가비아 이미지를 클릭하세요- 설정 방법 우측 상단에 My가비아를 클릭하세요. 서비스 관리를 클릭하세요. 우측 하단의 파란색 버튼 관리툴을 클릭하세요. DNS 정보 -&amp;gt; 도메인 연결 -&amp;gt; 설정을 클릭하세요 DNS 정보의 파란 버튼 “설정”을 클릭하세요 DNS 설정을 위와 같이 설정하세요(1) 타입이란? DNS 설정 시 타입에 대한 설명 , 기본 타입 A 권장(2) 호스트란? www -&amp;gt; http://www.allwebtoon.xyz@ -&amp;gt; h..." }, { "title": "[Javascrpit] 유효성 검사", "url": "/posts/lang-js-verification/", "categories": "Front, Javascript", "tags": "Verification, Javascrpt", "date": "2021-01-17 23:10:29 +0900", "snippet": "Javascript 유효성 검사1. URL 유효성 검사function goEventPage(url){ //url 유효성 검사 let regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&amp;amp;%@!\\-\\/]))?/; //올바른 url이 맞다면 해당 url로 이동 if(regex.test(url)){ location.href = url; }}2. Image 유효성 검사// 태그에서 data-width / data-heigh..." }, { "title": "cdata 사용이유", "url": "/posts/spring-mybatis-cdata/", "categories": "Mybatis, cdata", "tags": "cdata, mybatis", "date": "2021-01-14 23:10:29 +0900", "snippet": "1. 개념 특수문자, 비교연산자 등 단어나 문장을 문자열로 인식하게 함2. 예시//사용 전&amp;lt;select id =&quot;list&quot; parameterType=&quot;int&quot; resultType=&quot;board.test.testDto&quot;&amp;gt;SELECT *FROM employeeswhere salary &amp;gt; 100&amp;lt;/select&amp;gt;//사용 후&amp;lt;select id = &quot;list&quot; parameterType=&..." }, { "title": "XML 설정 파일 정리", "url": "/posts/springboot-config/", "categories": "SpringBoot, XML", "tags": "XML, SpringBoot", "date": "2021-01-13 23:10:29 +0900", "snippet": "프로젝트 구조1. servlet-contex.xml servlet-contex.xml WEB Application 에서 client 요청을 받기 위한 설정 JSP와 관련있는 객체(bean) 설정 - controller, MultipartResolver, Interceptor(로그인 등) 어노테이션 `` URL 관련 설정 servlet에서 보듯이 요청과 관련된 객체를 정의 url과 관..." }, { "title": "SqlSession 정리", "url": "/posts/springboot-sqlsession/", "categories": "SpringBoot, Session", "tags": "Session, SpringBoot", "date": "2021-01-12 23:10:29 +0900", "snippet": "기존 Project Controller -&amp;gt; Service -&amp;gt; Mapper.java -&amp;gt; Mapper.xmlController &amp;lt;- Service &amp;lt;- Mapper.java &amp;lt;-SqlSession 사용 시 Controller -&amp;gt; ServiceImpl(Interface implement) -&amp;gt; DaoImpl(Interface implement) return sqlsession.selectList(Na..." }, { "title": "Java_형변환", "url": "/posts/lang-jdk8-cast/", "categories": "Programming, Java", "tags": "Java", "date": "2021-01-12 23:10:29 +0900", "snippet": "1. 묵시적 형변환 자동 형변환이라고도 하며별도의 설정 없이 작은 데이터 타입 -&amp;gt; 큰 데이터타입으로 변환시에 사용됨 int가 4바이트, double가 8바이트int의 값은 데이터 손실 없이 자동으로 형변환할 수 있다아래의 값을 출력하면2. 명시적 형변환 강제 형변환이라고도 하며 형변환 타입을 명시해줌으로써 큰 데이터타입 -&amp;gt; 작은 데이터 타입으로 변환 시에 사용할 수 있음 명시적 형변환은 데이터의 크기에 상관 없이 사용할 수 있다. 하지만 큰 데이터타입 -&amp;gt; 작은 데이터 타입의 ..." }, { "title": "Annotation 정리", "url": "/posts/springboot-annotation/", "categories": "SpringBoot, Annotation", "tags": "Annotation, SpringBoot", "date": "2021-01-11 23:10:29 +0900", "snippet": "@Component 사용법에 맞게 Annotation을 세분화하는 것이 중요통합적으로 사용할 수 있으나, 통합적인 만큼 추후에 업데이트 되는 기능들에 제한적일 수 있음@RestController Controller 중 View에 응답하지 않고 JSON으로 결과를 반환하는 Controller@RestController 안의 Method들은 자동적으로 @ResponseBody가 자동적으로 붙는다@Controller(Controller &amp;gt; Component) Component를 사용해도 무방?하다Controller..." }, { "title": "Java_단락평가(SCE)", "url": "/posts/lang-jdk8-sce/", "categories": "Programming, Java", "tags": "Java", "date": "2021-01-11 23:10:29 +0900", "snippet": "개념 논리 연산자 &amp;amp;&amp;amp; 혹은   를 포함한 연산 결과 True/False에서 앞의 연산을 통해서 뒤의 연산 결과 전에 판단을 완료하는 것 “나머지 연산을 수행할 필요가 없을 때 사용된다”2. &amp;amp;&amp;amp;//&amp;amp;&amp;amp; 조건if (vo != null &amp;amp;&amp;amp; vo.getUserName() == &quot;유저&quot;) { System.Out.P..." }, { "title": "Java_자료구조(Map)", "url": "/posts/lang-java-map/", "categories": "Programming, Java", "tags": "자료구조, Map", "date": "2021-01-08 23:10:29 +0900", "snippet": "Javascript 유효성 검사1. Map이란? Collection Framework에서 [Key, Value] 형태로 구성2. Map과 JSON의 유사점 일반적으로 Javascript에서 사용하는 JSON 구조와 유사함 Json 자료 예시 위의 자료는 Portfolio로 만들었던 웹사이트이다. Server 단에서 View 단으로 데이터를 전달할 때 JSON의 형태로 제공해준다. JSON 형태는 값을 가공하기 편해서 본인은 매우 선호하고 있음 ‘w_no’는 Key, ‘5248’은 Value3. Map의 조건 (1) ..." } ]
